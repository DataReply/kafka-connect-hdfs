stages:
  - build
  - test
  - package

build_release:
  stage: package
  except:
    - master
  only:
    - tags
  before_script:
    - mkdir -p /root/.m2 && echo """<settings><proxies><proxy><id>http-proxy</id><active>true</active><protocol>http</protocol><host>$proxy_url</host><port>$proxy_port</port></proxy><proxy><id>https-proxy</id><active>true</active><protocol>https</protocol><host>$proxy_url</host><port>$proxy_port</port></proxy></proxies></settings>""" >> /root/.m2/settings.xml
  script:
    - export http_proxy=$proxy && export https_proxy=$ssl_proxy
    - cd $CI_PROJECT_DIR
    - mkdir build_temp
    - cd build_temp
    - python -c "import urllib2;import ssl;ctx = ssl.create_default_context();ctx.check_hostname = False;ctx.verify_mode = ssl.CERT_NONE;filedata = urllib2.urlopen('https://github.com/apache/kafka/archive/trunk.zip', context=ctx) ;datatowrite = filedata.read();fn=open('$CI_PROJECT_DIR/build_temp/kafka.zip', 'wb');fn.write(datatowrite);fn.close()"
    - python -c "import urllib2;import ssl;ctx = ssl.create_default_context();ctx.check_hostname = False;ctx.verify_mode = ssl.CERT_NONE;filedata = urllib2.urlopen('https://github.com/confluentinc/common/archive/master.zip', context=ctx) ;datatowrite = filedata.read();fn=open('$CI_PROJECT_DIR/build_temp/common.zip', 'wb');fn.write(datatowrite);fn.close()"
    - python -c "import urllib2;import ssl;ctx = ssl.create_default_context();ctx.check_hostname = False;ctx.verify_mode = ssl.CERT_NONE;filedata = urllib2.urlopen('https://github.com/confluentinc/rest-utils/archive/master.zip', context=ctx) ;datatowrite = filedata.read();fn=open('$CI_PROJECT_DIR/build_temp/rest-utils.zip', 'wb');fn.write(datatowrite);fn.close()"
    - python -c "import urllib2;import ssl;ctx = ssl.create_default_context();ctx.check_hostname = False;ctx.verify_mode = ssl.CERT_NONE;filedata = urllib2.urlopen('https://github.com/confluentinc/schema-registry/archive/master.zip', context=ctx) ;datatowrite = filedata.read();fn=open('$CI_PROJECT_DIR/build_temp/schema-registry.zip', 'wb');fn.write(datatowrite);fn.close()"
    - python -c "import urllib2;import ssl;ctx = ssl.create_default_context();ctx.check_hostname = False;ctx.verify_mode = ssl.CERT_NONE;filedata = urllib2.urlopen('https://github.com/confluentinc/kafka-connect-storage-common/archive/master.zip', context=ctx) ;datatowrite = filedata.read();fn=open('$CI_PROJECT_DIR/build_temp/kafka-connect-storage-common.zip', 'wb');fn.write(datatowrite);fn.close()"
    - cd ..
#    - mvn package -DskipTests=true
    - sh assembly.sh
    - cp $CI_PROJECT_DIR/target/$PROJECT_NAME-4.0.0.jar /mnt/container-volumes/connect/kafka-connect-hdfs
  artifacts:
    name: "$PROJECT_NAME-$CI_COMMIT_TAG"
    # available at REPO_URL/builds/artifacts/<CI_COMMIT_TAG>/download?job=build_release
    paths:
      - "$CI_PROJECT_DIR/$PROJECT_NAME-$CI_COMMIT_TAG"